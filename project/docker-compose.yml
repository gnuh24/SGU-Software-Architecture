version: "3.9"

services:
    # =====================
    # PostgreSQL Database
    # =====================
    postgres:
        image: postgres:14
        container_name: postgres_db
        restart: unless-stopped
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: sa_project1
        ports:
            - "5432:5432"
#        volumes:
#            - postgres_data:/var/lib/postgresql/data
#            - ./setup/portgresql-init.sql:/docker-entrypoint-initdb.d/init.sql

    # =====================
    # Redis Cache
    # =====================
    redis:
        image: redis:7.2.4
        container_name: redis_cache
        restart: unless-stopped
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data

    # =====================
    # Zookeeper (Official)
    # =====================
    zookeeper:
        image: zookeeper:3.9
        container_name: zookeeper
        restart: unless-stopped
        ports:
            - "2181:2181"
        environment:
            ZOO_MY_ID: 1
            ZOO_SERVERS: server.1=zookeeper:2888:3888;2181
            ZOO_4LW_COMMANDS_WHITELIST: mntr,conf,ruok,stat
        volumes:
            - zookeeper_data:/data
            - zookeeper_datalog:/datalog

    # =====================
    # Kafka 3.5 (Bitnami)
    # =====================
    kafka:
        image: bitnamilegacy/kafka:3.5
        container_name: kafka_broker
        restart: unless-stopped
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
        environment:
            - KAFKA_BROKER_ID=1
            - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
            - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
        volumes:
            - kafka_data:/bitnami/kafka

volumes:
    postgres_data:
    redis_data:
    zookeeper_data:
    zookeeper_datalog:
    kafka_data:
